import { ChatClient } from "@twurple/chat";
import { db, initAccount } from "../../helpers/database";
import { logger } from "../../helpers/logger";
import { io } from "../../server";
import { FeedEvent } from "../types";
import { getCurrency } from "../../helpers/preferences";

/**
 * Handles channel point rewards and other currency rewards
 */
export function handleReward(
  amount: number,
  data: any,
  chatClient: ChatClient,
  icon: string = "üîÅ",
  type: string = "Redeem",
) {
  try {
    // Initialize user account if not exists
    initAccount(data.userId);
    // Get current currency
    const currency = getCurrency();

    // Update user's currency in database
    db.prepare("UPDATE users SET money = money + ? WHERE user = ?").run(
      amount,
      data.userId,
    );

    // Log the transaction
    logger.info(`[Reward] ${type} ${amount} ${currency} for ${data.userName}`);

    // Create feed event data
    const feedData: FeedEvent = {
      type: "normal",
      icon: icon,
      message: `System ‚û° ${data.userDisplayName}`,
      action: `+ ${amount} ${currency}`,
    };

    // Emit the event to websocket clients
    io.emit("feed", feedData);

    // Send confirmation message in chat
    chatClient.say(
      process.env.TW_CHANNEL!,
      `@${data.userName} üíµ ${type === "Redeem" ? "‡πÅ‡∏•‡∏Å‡∏£‡∏±‡∏ö" : "‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö"} ${amount} ${currency} ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!${
        type !== "Redeem" ? " ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏µ‡πà‡∏™‡∏ô‡∏±‡∏ö‡∏™‡∏ô‡∏∏‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏î‡πâ‡∏ß‡∏¢‡∏ô‡∏∞!" : ""
      }`,
    );
  } catch (error) {
    // Get current currency
    const currency = getCurrency();

    logger.error(
      `[Reward] Error processing ${amount} ${currency} for ${data.userName}:`,
      error,
    );

    // Notify in chat if there was an error
    chatClient.say(
      process.env.TW_CHANNEL!,
      `@${data.userName} ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏• ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏à‡πâ‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•`,
    );
  }
}
